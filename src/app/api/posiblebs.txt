// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  name       String
  email      String      @unique
  password   String
  diagnoses  Diagnosis[]
  empresas   Empresa[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  passwordResets PasswordReset[]
}

model Diagnosis {
  id        Int      @id @default(autoincrement())
  userId    Int
  status    String   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
  tests     Test[]
}

model Test {
  id            Int      @id @default(autoincrement())
  diagnosisId   Int
  number        Int      
  result        Int      
  description   String   
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  diagnosis     Diagnosis @relation(fields: [diagnosisId], references: [id])
}
model Empresa {
  id                  Int      @id @default(autoincrement())
  nombre              String
  estado              String   
  correoElectronico   String
  telefonos           String
  nombreContacto      String
  nit                 String
  tipoEmpresa         String
  sector              String
  anoFundacion        Int
  ubicacion           String
  ingresosAnuales     String
  activosTotales      String
  patrimonio          String
  numeroEmpleados     String
  canalesDistribucion String
  principalesClientes String
  tecnologiaUtilizada String
  emailAuthorization  Boolean
  userId              Int
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  user                User     @relation(fields: [userId], references: [id])

  @@map("empresas") // Opcional: especifica un nombre personalizado de la tabla en la base de datos
}


model PasswordReset {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id])
}

//


Correo electrónico (string)
Teléfonos (number)
Nombre de contacto (string)
Nombre de la empresa (string)
NIT (number)
Tipo de empresa (desplegable:
Microempresa
Pequeña empresa
Mediana empresa
Gran empresa)


Sector económico (desplegable:
Construcción
Agropecuario
Industrial y Manufacturero 
Minero-Energético
Servicios
Comercio
Cultural y Creativo (Economía Naranja)
Tecnológico y de Innovación
Financiero y Asegurador
Ambiental y Sostenible
Otros: campo de texto
)

Año de Fundación (Campo numérico con selección de año)
Ubicación Campo de texto

Ingresos anuales {obligatorio}(desplegable:
Menos de $100 millones
Entre $100 millones y $500 millones
Entre $500 millones y $1.000 millones
Más de $1.000 millones
)
Activos totales (desplegable:
Menos de $500 millones
Entre $500 millones y $5.000 millones
Más de $5.000 millones
)
Patrimonio (desplegable:
Menos de $500 millones
Entre $500 millones y $1.000 millones
Más de $1.000 millones
)
Número de empleados (desplegable:
1-10 empleados
11-50 empleados
51-200 empleados
Más de 200 empleados
)
Canales de distribución (desplegable:
Directo
E-commerce
Distribuidores
Mixto
)
Principales clientes (desplegable:
Empresas
Consumidores finales
Gobierno
Otros (Campo de texto)
)
Tecnología utilizada (desplegable:
Básica (Correo, hojas de cálculo)
Intermedia (ERP, CRM)
Avanzada (IA, Big Data)
)
Inversión en I+D (desplegable:
No invierte
Menos del 5% de los ingresos
Entre el 5% y 10% de los ingresos
Más del 10% de los ingresos
)
Adopción de tecnología(desplegable:
Básica
Media
Alta
)